name: Build PJSIP for Android

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-pjsip:
    name: Build PJSIP for multiple Android architectures
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Android NDK
      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c # Specify the NDK version (latest stable or preferred version)

      # Step 3: Add NDK to PATH
      - name: Add NDK to PATH
        run: |
          export ANDROID_NDK_ROOT=/opt/hostedtoolcache/ndk/r27c/x64
          export PATH=$ANDROID_NDK_ROOT:$PATH
          echo "ANDROID_NDK_ROOT set to $ANDROID_NDK_ROOT"
          echo "Updated PATH: $PATH"

      # Step 4: Set up environment variables and build folder
      - name: Set up environment variables and build folders
        run: |
          BASE_FOLDER=$(pwd)
          PJSIP_BASE_PATH="${BASE_FOLDER}"
          PJSIP_TMP_PATH="/tmp/pjsip"
          CONFIG_SITE_PATH="${PJSIP_BASE_PATH}/pjlib/include/pj/config_site.h"
          FINAL_BUILD_DIR="${BASE_FOLDER}/pjsip-build"
          FINAL_BUILD_LIB="${FINAL_BUILD_DIR}/lib"
          FINAL_BUILD_LOGS="${FINAL_BUILD_DIR}/logs"

          export ANDROID_NDK_ROOT=/opt/hostedtoolcache/ndk/r27c/x64
          export PATH=$ANDROID_NDK_ROOT:$PATH

          # Clear and set up build directories
          rm -rf "${FINAL_BUILD_DIR}"
          mkdir -p "${FINAL_BUILD_LIB}"
          mkdir -p "${FINAL_BUILD_LOGS}"

          # Create config_site.h
          cat <<EOF > "$CONFIG_SITE_PATH"
          #define PJ_CONFIG_ANDROID 1
          #define PJMEDIA_HAS_G7221_CODEC 0
          #include <pj/config_site_sample.h>
          #define PJMEDIA_HAS_VIDEO 0
          #define PJMEDIA_AUDIO_DEV_HAS_ANDROID_JNI 0
          #define PJMEDIA_AUDIO_DEV_HAS_OPENSL 1
          #define PJSIP_AUTH_AUTO_SEND_NEXT 0
          EOF

      # Step 5: Build PJSIP for each architecture
      - name: Build PJSIP for architectures
        run: |
          ARCHS=("arm64-v8a" "armeabi-v7a" "x86")
          BASE_FOLDER=$(pwd)
          FINAL_BUILD_LIB="${BASE_FOLDER}/pjsip-build/lib"
          mkdir -p "$FINAL_BUILD_LIB"

          for arch in "${ARCHS[@]}"; do
              echo "Building PJSIP for $arch ..."
              PJSIP_TMP_PATH="/tmp/pjsip/$arch"
              
              # Debug ścieżki
              echo "Temporary path: $PJSIP_TMP_PATH"

              mkdir -p "$PJSIP_TMP_PATH"
              cp -r ${PJSIP_BASE_PATH}/* "$PJSIP_TMP_PATH"
              cd "$PJSIP_TMP_PATH"

              APP_PLATFORM=android-21 TARGET_ABI=$arch ./configure-android --use-ndk-cflags >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1
              make dep >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1
              make >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1

              echo "Copying built libraries to final directory..."
              mkdir -p "${FINAL_BUILD_LIB}/${arch}"
              cp pjsip-apps/src/swig/java/android/libs/$arch/libpjsua2.so "${FINAL_BUILD_LIB}/${arch}/" || true
          done

      # Step 6: Upload compiled libraries as artifacts
      - name: Upload libraries as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pjsip-libs
          path: pjsip-build
