name: Build PJSUA2 for Android

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build-pjsua2:
    name: Build PJSUA2 for multiple Android architectures
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository with submodules
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: true

      # Step 2: Set up Android NDK
      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c

      # Step 3: Add NDK to PATH
      - name: Add NDK to PATH
        run: |
          echo "ANDROID_NDK_ROOT=/opt/hostedtoolcache/ndk/r27c/x64" >> $GITHUB_ENV
          echo "$ANDROID_NDK_ROOT" >> $GITHUB_PATH

      # Step 4: Install dependencies
      - name: Install SWIG and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y swig build-essential cmake libtool pkg-config

      # Step 5: Set up environment variables and build folders
      - name: Set up environment variables
        run: |
          echo "BASE_FOLDER=${{ github.workspace }}" >> $GITHUB_ENV
          echo "SWIG_DIR=$BASE_FOLDER/pjsip-apps/src/swig" >> $GITHUB_ENV
          echo "LIB_DIR=$BASE_FOLDER/pjsip-apps/src/swig/java/android/pjsua2/src/main/jniLibs" >> $GITHUB_ENV

          CONFIG_SITE_PATH="$BASE_FOLDER/pjlib/include/pj/config_site.h"

          # Create config_site.h
          mkdir -p "$(dirname "$CONFIG_SITE_PATH")"
          cat <<EOF > "$CONFIG_SITE_PATH"
          #define PJ_CONFIG_ANDROID 1
          #define PJMEDIA_HAS_G7221_CODEC 1
          #include <pj/config_site_sample.h>
          #define PJMEDIA_HAS_VIDEO 0
          #define PJMEDIA_AUDIO_DEV_HAS_ANDROID_JNI 1
          #define PJMEDIA_AUDIO_DEV_HAS_OPENSL 1
          #define PJSIP_AUTH_AUTO_SEND_NEXT 1
          EOF

      # Step 6: Verify directory structure
      - name: Verify directory structure
        run: |
          echo "Current working directory: $(pwd)"
          ls -R $(pwd)

      # Step 7: Configure pjproject
      - name: Configure pjproject
        run: |
          cd $BASE_FOLDER
          ./configure-android --use-ndk-cflags

      # Step 8: Build PJSUA2 for all architectures
      - name: Build PJSUA2 for multiple architectures
        run: |
          cd $SWIG_DIR
          echo "Now in directory: $(pwd)"
          
          for ABI in arm64-v8a armeabi-v7a x86; do
            echo "Building for $ABI..."
            TARGET_ABI=$ABI make
          done

      # Step 9: Verify and move compiled libraries
      - name: Verify and move compiled libraries
        run: |
          mkdir -p $LIB_DIR

          for ABI in arm64-v8a armeabi-v7a x86; do
            TARGET_LIB="$LIB_DIR/$ABI/libpjsua2.so"
            
            if [ ! -f "$TARGET_LIB" ]; then
              echo "❌ Native library libpjsua2.so not found for $ABI!"
              exit 1
            fi
            
            echo "✅ libpjsua2.so for $ABI found!"
          done

      # Step 10: Upload compiled libraries as artifacts
      - name: Upload libraries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pjsua2-libs
          path: |
            $LIB_DIR/arm64-v8a/libpjsua2.so
            $LIB_DIR/armeabi-v7a/libpjsua2.so
            $LIB_DIR/x86/libpjsua2.so
